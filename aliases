## NOTE! This script should be sourced, not executed. 
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

alias va="vi ~/main/nuvolaris/aliases ; source ~/main/nuvolaris/aliases"

export KNS="default"
alias k='kubectl -n $KNS'
alias kg='kubectl -n $KNS get'
alias kgy='kubectl -n $KNS -o yaml get'
alias kap='kubectl -n $KNS apply -f'
alias kde='kubectl -n $KNS describe'
alias kdel='kubectl -n $KNS delete'
alias kin="kubectl cluster-info"
function kex { 
  ME=$1
  CMD=${2:-bash} 
  kubectl -n $KNS exec -ti $(kubectl -n $KNS get po | awk "/$ME/"'{print $1}') -- $CMD
}
function klo {
  ME=$1
  shift
  kubectl -n $KNS logs $(kubectl -n $KNS get po | awk "/$ME/"'{print $1}') "$@"
} 
function kns {
  if test -z "$1"
  then kubectl get ns
       echo "*** current: $KNS ***"
  else export KNS="$1"
       kubectl config set-context --current --namespace "$1"
  fi
}

alias kwa="watch kubectl get po,deploy,sts,jobs,svc,ingress --no-headers"
alias kwp="watch kubectl get po,deploy,sts,jobs --no-headers"
alias kws="watch kubectl get svc,ingress --no-headers"
alias kwc="watch kubectl get cm,secret --no-headers"

alias kfin='kubectl -n nuvolaris patch -p {"metadata":{"finalizers":[]}} --type=merge' 

alias ga="git add"
alias gst="git status"
alias glog="git log --pretty=oneline"
alias gdf="git diff --name-only"
alias gcm="git commit -m"
alias gcam="git commit -a -m"
alias gpom="git push origin main"

function gsnap {
  if test -z "$1"
  then echo msg please
  else x=""; for i in "$@" ; do x="$x$i " ; done
       git commit -a -m "$x" 
       git push 
  fi
}

alias t=task
alias tt='task -d ..'
alias ttt='task -d ../..'
alias dtag="date +%y%m%d%H"
alias lenv='export $(xargs <.env)'

nvar() { 
  nuv -config -dump | grep "$1" 
} 
alias nreset="nuv config reset"
alias nc="nuv config"
alias ns="nuv setup"
alias nd="nuv debug"
alias nonuv="NUV_NO_NUVOPTS=1 nuv"
alias nca="nuv cloud aws"
alias nce="nuv cloud eks"
alias ncaz="nuv cloud azure"
alias ncak="nuv cloud aks"
alias ncg="nuv cloud gcloud"
alias ndk="nuv debug kube"
alias ndl="nuv debug log"
alias nsk="nuv setup kubernetes"
alias nsn="nuv setup nuvolaris"

alias ncu="nuv config use"
function use() {
   if test -z "$1"
   then nuv config use
   else nuv config use "$@"
        nuv debug export F=-
        kubectl config set-context --current --namespace nuvolaris
   fi
}

function origin2ssh {
  HERE="$(basename $PWD)"
  git remote set-url origin "git@github.com:nuvolaris/$HERE"
}

alias nssh="ssh -oStrictHostKeyChecking=no"
