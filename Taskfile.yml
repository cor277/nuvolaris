# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: '3'

vars:
  MODULES: controller runtimes operator cli config testing
  BASETAG: 0.2.1-trinity
  IMAGE: nuvolaris/nuvolaris-devkit
  REPO: ghcr.io
  TAG:
    sh: git describe --tags --abbrev=0 2>/dev/null || echo latest
  REMOTE:
    sh: echo "${REMOTE:-origin}"
  BRANCH:
    sh: git rev-parse --abbrev-ref HEAD
  RELEASE:
    sh: cat release
        
tasks:

  default: true

  image-tag: 
    silent: true
    cmds:
    - git tag -d $(git tag) 
    - git tag -f {{.BASETAG}}.$(date +%y%m%d%H)
    - env PAGER= git tag

  cli-tag: git tag -d $(git tag) ; git tag -f v{{.BASETAG}}.$(date +%y%m%d%H)

  buildx-and-push:
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64 -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} . --push

  build:
    cmds:
      - docker build . -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} {{.CLI_ARGS}}
  
  start:
    cmds:
      - > 
        docker run -d
        --mount source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind
        --network=host --env=REAL_HOME=$HOME
        -v {{.PWD}}:/workspace
        {{.REPO}}/{{.IMAGE}}:{{.TAG}} | tee .docker-pid
    status:
      - test -f .docker-pid
    vars:
      PWD:
        sh: pwd

  enter:
    deps:
      - start
    cmds:
      - docker exec -ti $(cat .docker-pid) bash

  stop:
    cmds:
      - cmd: docker kill "$(cat .docker-pid)"
        ignore_error: true
      - cmd: docker rm "$(cat .docker-pid)"
        ignore_error: true
      - rm .docker-pid
    preconditions:
      - test -f .docker-pid

  setup:
    #cmds:
    #- cmd: |
    #     for mod in {{.MODULES}}
    #     do if test -e $mod/Taskfile.yml
    #        then task setup -d $mod
    #        fi
    #     done 
    #  ignore_error: true
    silent: true

  git-push-all: |
       for mod in {{.MODULES}}
       do cd $mod 
          echo "*** $mod ***"
          git push {{.REMOTE}} {{.BRANCH}}
          cd ..
       done

  test-osx: bash test-cli.sh {{.RELEASE}}
  
  test-linux: 
    - scp test-cli.sh ubuntu@devkit.nuvolaris.io 
    - ssh ubuntu@devkit.nuvolaris.io bash test-cli.sh {{.RELEASE}}

  test-windows:
    - scp test-cli.sh Administrator@wintest.nuvolaris.io 
    - ssh Administrator@wintest.nuvolaris.io '"C:\Program Files\Git\bin\bash.exe"' test-cli.sh {{.RELEASE}}

  test-and-tag:
    cmds:
    - task: test-osx
    - task: test-linux
    - task: test-windows
    - git tag -d $(git tag)
    - git tag -f {{.VER}}
    - echo "tested and tagged, please git push --tags to release"
    vars:
      VER:
        sh: cat release | sed -e 's/-.*.//'


